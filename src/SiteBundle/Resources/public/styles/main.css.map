{"version":3,"sources":["webpack:///webpack:///src/SiteBundle/Resources/public/styles/Users/dennissmuda/Sites/winterisda/symfony-boiler/~/bourbon-neat/app/assets/stylesheets/grid/_box-sizing.scss","webpack:///webpack:///src/SiteBundle/Resources/public/styles/Users/dennissmuda/Sites/winterisda/symfony-boiler/src/SiteBundle/Resources/public/styles/base/_core.scss","webpack:///webpack:///src/SiteBundle/Resources/public/styles/Users/dennissmuda/Sites/winterisda/symfony-boiler/~/bourbon/app/assets/stylesheets/addons/_prefixer.scss","webpack:///webpack:///src/SiteBundle/Resources/public/styles/Users/dennissmuda/Sites/winterisda/symfony-boiler/~/sass-mediaqueries/_media-queries.scss"],"names":[],"mappings":"AAGE;EACE,uBAAuB,EACxB;;AAED;EAII,oBAAoB,EACrB;;ACXL;EACE,yBAAyB;EACzB,gBAAgB,EACjB;;AAED;EACE,wBAAwB,EACzB;;AAED;EACE,aAAa;ECwBP,6BDvBsB;EC2BtB,0BD3BsB;ECuCtB,qBDvCsB,EAS7B;EAXD;IAKI,cAAc,EACf;EEYD;IFlBF;MASI,aAAa,EAEhB","file":"src/SiteBundle/Resources/public/styles/main.css","sourcesContent":["@charset \"UTF-8\";\n\n@if $border-box-sizing == true {\n  html { // http://bit.ly/1qk2tVR\n    box-sizing: border-box;\n  }\n\n  * {\n    &,\n    &::after,\n    &::before {\n      box-sizing: inherit;\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/SiteBundle/Resources/public/styles/Users/dennissmuda/Sites/winterisda/symfony-boiler/~/bourbon-neat/app/assets/stylesheets/grid/_box-sizing.scss\n **/","\nhtml {\n  font-family: 'Open Sans';\n  font-size: 15px;\n}\n\nbody {\n  background-color: white;\n}\n\nh1 {\n  color: black;\n  @include transition(all 0.3s);\n\n  &:hover {\n    color: yellow;\n  }\n\n  @include max-screen(600px) {\n    color: beige;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/SiteBundle/Resources/public/styles/Users/dennissmuda/Sites/winterisda/symfony-boiler/src/SiteBundle/Resources/public/styles/base/_core.scss\n **/","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/SiteBundle/Resources/public/styles/Users/dennissmuda/Sites/winterisda/symfony-boiler/~/bourbon/app/assets/stylesheets/addons/_prefixer.scss\n **/","//  Author: Rafal Bromirski\n//  www: http://rafalbromirski.com/\n//  github: http://github.com/paranoida/sass-mediaqueries\n//\n//  Licensed under a MIT License\n//\n//  Version:\n//  1.6.1\n\n// --- generator ---------------------------------------------------------------\n\n@mixin mq($args...) {\n  $media-type: 'only screen';\n  $media-type-key: 'media-type';\n  $args: keywords($args);\n  $expr: '';\n\n  @if map-has-key($args, $media-type-key) {\n    $media-type: map-get($args, $media-type-key);\n    $args: map-remove($args, $media-type-key);\n  }\n\n  @each $key, $value in $args {\n    @if $value {\n      $expr: \"#{$expr} and (#{$key}: #{$value})\";\n    }\n  }\n\n  @media #{$media-type} #{$expr} {\n    @content;\n  }\n}\n\n// --- screen ------------------------------------------------------------------\n\n@mixin screen($min, $max, $orientation: false) {\n  @include mq($min-width: $min, $max-width: $max, $orientation: $orientation) {\n    @content;\n  }\n}\n\n@mixin max-screen($max) {\n  @include mq($max-width: $max) {\n    @content;\n  }\n}\n\n@mixin min-screen($min) {\n  @include mq($min-width: $min) {\n    @content;\n  }\n}\n\n@mixin screen-height($min, $max, $orientation: false) {\n  @include mq($min-height: $min, $max-height: $max, $orientation: $orientation) {\n    @content;\n  }\n}\n\n@mixin max-screen-height($max) {\n  @include mq($max-height: $max) {\n    @content;\n  }\n}\n\n@mixin min-screen-height($min) {\n  @include mq($min-height: $min) {\n    @content;\n  }\n}\n\n// --- hdpi --------------------------------------------------------------------\n\n@mixin hdpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min-resolution: #{round($ratio*96)}dpi) {\n    @content;\n  }\n}\n\n// --- hdtv --------------------------------------------------------------------\n\n@mixin hdtv($standard: '1080') {\n  $min-width: false;\n  $min-height: false;\n\n  $standards: ('720p', 1280px, 720px)\n              ('1080', 1920px, 1080px)\n              ('2K', 2048px, 1080px)\n              ('4K', 4096px, 2160px);\n\n  @each $s in $standards {\n    @if $standard == nth($s, 1) {\n      $min-width: nth($s, 2);\n      $min-height: nth($s, 3);\n    }\n  }\n\n  @include mq(\n    $min-device-width: $min-width,\n    $min-device-height: $min-height,\n    $min-width: $min-width,\n    $min-height: $min-height\n  ) {\n    @content;\n  }\n}\n\n// --- iphone4 -----------------------------------------------------------------\n\n@mixin iphone4($orientation: false) {\n  $min: 320px;\n  $max: 480px;\n  $pixel-ratio: 2;\n  $aspect-ratio: '2/3';\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $device-aspect-ratio: $aspect-ratio,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- iphone5 -----------------------------------------------------------------\n\n@mixin iphone5($orientation: false) {\n  $min: 320px;\n  $max: 568px;\n  $pixel-ratio: 2;\n  $aspect-ratio: '40/71';\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $device-aspect-ratio: $aspect-ratio,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- iphone6 -----------------------------------------------------------------\n\n@mixin iphone6($orientation: false) {\n  $min: 375px;\n  $max: 667px;\n  $pixel-ratio: 2;\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- iphone6 plus ------------------------------------------------------------\n\n@mixin iphone6-plus($orientation: false) {\n  $min: 414px;\n  $max: 736px;\n  $pixel-ratio: 3;\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- ipad (all) --------------------------------------------------------------\n\n@mixin ipad($orientation: false) {\n  $min: 768px;\n  $max: 1024px;\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation\n  ) {\n    @content;\n  }\n}\n\n// --- ipad-retina -------------------------------------------------------------\n\n@mixin ipad-retina($orientation: false) {\n  $min: 768px;\n  $max: 1024px;\n  $pixel-ratio: 2;\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- orientation -------------------------------------------------------------\n\n@mixin landscape() {\n  @include mq($orientation: landscape) {\n    @content;\n  }\n}\n\n@mixin portrait() {\n  @include mq($orientation: portrait) {\n    @content;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** webpack:///src/SiteBundle/Resources/public/styles/Users/dennissmuda/Sites/winterisda/symfony-boiler/~/sass-mediaqueries/_media-queries.scss\n **/"],"sourceRoot":""}